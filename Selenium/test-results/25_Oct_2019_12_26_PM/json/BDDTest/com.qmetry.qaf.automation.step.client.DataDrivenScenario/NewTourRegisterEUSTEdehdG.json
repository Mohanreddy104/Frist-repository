{
  "seleniumLog": [
    {
      "commandName": "openBrowser",
      "args": [
        "[]"
      ],
      "result": "success",
      "subLogs": [
        {
          "commandName": "get",
          "args": [
            "[/]"
          ],
          "result": "success",
          "subLogs": [
            {
              "commandName": "get",
              "args": [
                "{url=http://www.newtours.demoaut.com/}"
              ],
              "result": "null",
              "subLogs": [],
              "duration": 1021
            }
          ],
          "duration": -1
        }
      ],
      "duration": -1
    },
    {
      "commandName": "clickonregister",
      "args": [
        "[]"
      ],
      "result": "success",
      "subLogs": [
        {
          "commandName": "findElements",
          "args": [
            "{value=//a[text()='REGISTER'], using=xpath}"
          ],
          "result": "[id: b773a3f4-ab96-4f05-8e59-da8f2ffb5efb]",
          "subLogs": [],
          "duration": 31
        },
        {
          "commandName": "findElement",
          "args": [
            "{value=//a[text()='REGISTER'], using=xpath}"
          ],
          "result": "id: b773a3f4-ab96-4f05-8e59-da8f2ffb5efb",
          "subLogs": [],
          "duration": 23
        },
        {
          "commandName": "isElementDisplayed",
          "args": [
            "By.xpath: //a[text()='REGISTER']",
            "{\"id\":\"b773a3f4-ab96-4f05-8e59-da8f2ffb5efb\"}"
          ],
          "result": "isElementDisplayed:true",
          "subLogs": [],
          "duration": 30
        },
        {
          "commandName": "click",
          "args": [
            "[register.register.link]"
          ],
          "result": "success",
          "subLogs": [
            {
              "commandName": "findElement",
              "args": [
                "{value=//a[text()='REGISTER'], using=xpath}"
              ],
              "result": "id: b773a3f4-ab96-4f05-8e59-da8f2ffb5efb",
              "subLogs": [],
              "duration": 8
            },
            {
              "commandName": "clickElement",
              "args": [
                "By.xpath: //a[text()='REGISTER']",
                "{\"id\":\"b773a3f4-ab96-4f05-8e59-da8f2ffb5efb\"}"
              ],
              "result": "clickElement:null",
              "subLogs": [],
              "duration": 967
            }
          ],
          "duration": -1
        }
      ],
      "duration": -1
    },
    {
      "commandName": "register",
      "args": [
        "[${fname}, ${lname}, ${phone}, ${email}, ${address}]"
      ],
      "result": "fail",
      "subLogs": [
        {
          "commandName": "sendKeys",
          "args": [
            "[null, register.firstname.text]"
          ],
          "result": "fail",
          "subLogs": [],
          "duration": -1
        }
      ],
      "duration": -1
    },
    {
      "commandName": "Then User click on continue button",
      "args": [
        "[]"
      ],
      "result": "Not Run",
      "subLogs": [],
      "duration": -1
    },
    {
      "commandName": "Then user register successfully",
      "args": [
        "[]"
      ],
      "result": "Not Run",
      "subLogs": [],
      "duration": -1
    }
  ],
  "checkPoints": [
    {
      "message": "Given User register",
      "type": "TestStepPass",
      "duration": 1022,
      "threshold": 0,
      "subCheckPoints": [
        {
          "message": "get '/'",
          "type": "TestStepPass",
          "duration": 1022,
          "threshold": 0,
          "subCheckPoints": []
        }
      ]
    },
    {
      "message": "When click on register button",
      "type": "TestStepPass",
      "duration": 1062,
      "threshold": 0,
      "subCheckPoints": [
        {
          "message": "click on 'register.register.link'",
          "type": "TestStepPass",
          "duration": 976,
          "threshold": 0,
          "subCheckPoints": []
        }
      ]
    },
    {
      "message": "And User enter with fname '${fname}' and lname '${lname}' and phone '9000015456' and email 'mohanreddy@gmail.com' and address '${address}'",
      "type": "TestStepFail",
      "screenshot": "../img/NewTourRegister_1dax7cba4osua19896.png",
      "duration": 1,
      "threshold": 0,
      "subCheckPoints": [
        {
          "message": "sendKeys 'null' into 'register.firstname.text'",
          "type": "TestStepFail",
          "duration": 0,
          "threshold": 0,
          "subCheckPoints": [
            {
              "message": "java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence",
              "type": "Fail",
              "duration": 0,
              "threshold": 0,
              "subCheckPoints": []
            }
          ]
        },
        {
          "message": "Keys to send should be a not null CharSequence",
          "type": "Fail",
          "duration": 0,
          "threshold": 0,
          "subCheckPoints": []
        }
      ]
    },
    {
      "message": "Then User click on continue button",
      "type": "TestStep",
      "duration": 0,
      "threshold": 0,
      "subCheckPoints": []
    },
    {
      "message": "Then user register successfully",
      "type": "TestStep",
      "duration": 0,
      "threshold": 0,
      "subCheckPoints": []
    }
  ],
  "errorTrace": "java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence\r\n\tat .And User enter with fname '${fname}' and lname '${lname}' and phone '${phone}' and email '${email}' and address '${address}'(resources/scenarios/RegisterCSV.bdd:5)\r\n\tat org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)\r\n\tat com.qmetry.qaf.automation.step.CommonStep.sendKeys_aroundBody6(CommonStep.java:119)\r\n\tat com.qmetry.qaf.automation.step.JavaStepReporter$MockJavaStep.doExecute(JavaStepReporter.java:138)\r\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\r\n\tat com.qmetry.qaf.automation.step.JavaStepReporter.javaTestStep(JavaStepReporter.java:88)\r\n\tat com.qmetry.qaf.automation.step.CommonStep.sendKeys(CommonStep.java:118)\r\n\tat com.newtour.steps.RegisterCSVSteps.register_aroundBody0(RegisterCSVSteps.java:22)\r\n\tat com.qmetry.qaf.automation.step.JavaStepReporter.javaTestStep(JavaStepReporter.java:101)\r\n\tat com.newtour.steps.RegisterCSVSteps.register(RegisterCSVSteps.java:20)\r\n\tat com.qmetry.qaf.automation.step.JavaStep.doExecute(JavaStep.java:153)\r\n\tat com.qmetry.qaf.automation.step.BaseTestStep.execute(BaseTestStep.java:149)\r\n\tat com.qmetry.qaf.automation.step.StringTestStep.execute(StringTestStep.java:134)\r\n\tat com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:180)\r\n\tat com.qmetry.qaf.automation.step.client.DataDrivenScenario.scenario(DataDrivenScenario.java:69)\r\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)\r\n\tat org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)\r\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)\r\n\tat org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)\r\n\tat org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)\r\n\tat org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)\r\n\tat org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)\r\n"
}